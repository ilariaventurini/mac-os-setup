{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "new react component in TS": {
    "prefix": "newReactTsComponent",
    "body": [
      "import * as React from 'react'",
      "import { inject, observer } from 'mobx-react'",
      "import { IStateable } from '../state'",
      "\ninterface Props extends IStateable {",
      "\tclassName?: string",
      "}",
      "\n@inject('state')",
      "@observer",
      "export class ComponentName extends React.Component<Props> {",
      "\trender() {",
      "\t\tconst { className = '' } = this.props",
      "\n\t\treturn(",
      "\t\t\t<div className={`\\${className}`}>",
      "\t\t\t\t<div className='w-100 h3 bg-red'>something</div>",
      "\t\t\t </div>",
      "\t\t)",
      "\t}",
      "}"
    ],
    "description": "new react component in TS"
  },

  "new react component in TS with state": {
    "prefix": "newReactTsComponentWithState",
    "body": [
      "import * as React from 'react'",
      "import { inject, observer } from 'mobx-react'",
      "import { IStateable } from '../state'",
      "\ninterface Props extends IStateable {",
      "\tclassName?: string",
      "}",
      "\ninterface IState {",
      "\tisSelected?: boolean",
      "}",
      "\n@inject('state')",
      "@observer",
      "export class ComponentName extends React.Component<Props, IState> {",
      "\tstate = {",
      "\t\tisSelected = false",
      "\t}",
      "\n\trender() {",
      "\t\tconst { className = '' } = this.props",
      "\n\t\treturn(",
      "\t\t\t<div className={`\\${className}`}>",
      "\t\t\t\t<div className='w-100 h3 bg-red'>something</div>",
      "\t\t\t </div>",
      "\t\t)",
      "\t}",
      "}"
    ],
    "description": "new react component in TS with state"
  },

  "react fragment": {
    "prefix": "<React.Frag",
    "body": ["<React.Fragment></React.Fragment>"],
    "description": "react fragment"
  }
}
